/**
 * @name bucks.min.js
 * @version 0.6.9
 * copyright (c) Cyberagent Inc.
 * @overview Async chain utility for browser and node.js
 */
!function(global){"use strict";var none=function none(){};var isArray=Array.isArray||function isArray(obj){return obj.toString()==="[object Array]"};var isArrayEmpty=function isArrayEmpty(arr){return arr.length===0};var logError=function logError(e){if(e.stack){console.error(e.stack)}else if(e.message){console.error(e.message)}else{console.error(e)}};var _uid=0;var uid=function uid(){return"__bucks__"+_uid++};var Bucks=function Bucks(params){this._tasks=[];this._taskcount=0;this._results=[];this.callback=none;this.failure=none;this._alive=true;this.__id=uid();Bucks.living[this.__id]=this;this.initialize(params)};Bucks.DEBUG=false;Bucks.running={};Bucks.living={};Bucks.prototype={initialize:none,_normalizeTask:function _normalizeTask(task){var _task=task;if(task.length<3){_task=function _task(err,res,next){var result=task.call(null,err,res);next.call(null,null,result)}}else if(task.length===3){_task=task}else if(task.length===4){_task=function _task(err,res,next,index){task.call(null,err,res,next,index)}}else{throw new Error("args length invalid")}return _task},_normalizeSuccess:function _normalizeSuccess(onSuccess){var _onSuccess=onSuccess;if(onSuccess.length<2){_onSuccess=function(res,next){var result=onSuccess(res);next(null,result)}}else if(onSuccess.length===2){_onSuccess=onSuccess}else{throw new Error("args length invalid")}return _onSuccess},_normalizeError:function _normalizeError(onError){var _onError=onError;if(onError.length<2||3<onError.length){throw new Error(onError.name+": args length invalid. should be: onError(err, next)")}return _onError},add:function add(task){if(!this._alive){throw new Error("this bucks object already destroyed.")}var _task=this._normalizeTask(task);this._tasks.push(_task);return this},then:function then(onSuccess){var _onSuccess=this._normalizeSuccess(onSuccess);return this.add(function onSuccessTask(err,res,next){if(err){next(err)}else{_onSuccess(res,next)}})},empty:function empty(){return this.then(function emptyTask(){})},error:function error(onError){var _onError=this._normalizeError(onError);return this.add(function onErrorTask(err,res,next){if(err){_onError(err,next)}else{next(err,res)}})},_iterator:function _iterator(err,res){if(!this._alive){throw new Error("this bucks object already destroyed.")}res?this._results.push(res):this._results.push(null);var task=this._tasks.shift();if(!task){return this.destroy(err)}try{var self=this;task(err,res,function(err,res){self._iterator(err,res);return this},this._taskcount++)}catch(exception){if(!this._results){if(Bucks.DEBUG){logError(exception)}else{throw exception}}this._iterator(exception,null)}return this},debug:function debug(){return this},parallel:function parallel(tasks){if(!isArray(tasks)){throw new Error("tasks is not array.")}if(isArrayEmpty(tasks)){return this.add(function passEmpty(err,res,next){next(null,new ParallelHandler(0).resultObj)})}for(var i=0,l=tasks.length;i<l;i++){var t=tasks[i];tasks[i]=this._normalizeTask(t)}return this.add(function callParallel(err,res,next){var parallelHandler=new ParallelHandler(tasks.length);parallelHandler.onFinish(function onFinishParallel(resultObj){var e;for(var i=0,l=resultObj.err.length;i<l;i++){var anError=resultObj.err[i];if(anError!==undefined&&anError!==null){e=anError}}next(e,resultObj)});tasks.forEach(function callEachTask(t,idx){setTimeout(function callTaskAsync(){(new Bucks).add(t).end(function(e,r){if(e){parallelHandler.successOne(idx,e,null)}else{parallelHandler.successOne(idx,null,r[0])}})},0)})})},waterfall:function waterfall(tasks){if(!isArray(tasks)){throw new Error("tasks is not array.")}if(isArrayEmpty(tasks)){return this.add(function passEmpty(err,res,next){next(null,[])})}for(var i=0,l=tasks.length;i<l;i++){tasks[i]=this._normalizeTask(tasks[i]);this.add(tasks[i])}return this},delay:function delay(ms){return this.add(function(err,res,next){setTimeout(function(){next(err,res)},ms)})},dispose:none,destroy:function destroy(err){var ress=this._results;var callback=this.callback;var failure=this.failure;var dispose=this.dispose;this._tasks=null;this._taskcount=0;this._results=null;this.callback=none;this.failure=none;this.dispose=none;dispose.call(this);ress.shift();try{if(callback){callback(err,ress)}else if(err){throw err}}catch(ex){if(failure){failure(ex)}else{if(Bucks.DEBUG){logError(ex)}else{throw ex}}}finally{delete this._alive;delete Bucks.running[this.__id];delete Bucks.living[this.__id];delete this.__id}return this},end:function end(callback,errback){if(callback&&callback.length<1){throw new Error("callback args length invalid. should be `callback(err, ress)` or `callback(err)`.")}var self=this;this.callback=callback;this.failure=errback;if(!this._tasks||!this._tasks.length){var err=new Error("task is empty. add(task) first. if theres no task to execute but end is desired, empty() may be useful");this.destroy(err,null);return callback(err)}Bucks.running[this.__id]=this;this._iterator();return undefined}};var ParallelHandler=function ParallelHandler(size){this._results=[];this._errors=[];this._waiting=size};ParallelHandler.prototype={onFinish:function onFinish(callback){this._onFinish=callback},successOne:function successOne(idx,err,res){this._errors[idx]=err;this._results[idx]=res;this._waiting--;if(this._waiting<=0){this._onFinish.call(null,this.resultObj)}}};ParallelHandler.prototype.__defineGetter__("resultObj",function resultObj(){return{err:this._errors,res:this._results}});if(typeof define==="function"&&define.amd){define(function(require,exports,module){return Bucks})}else if(typeof module!=="undefined"&&module.exports){module.exports=Bucks}else{global.Bucks=Bucks}}(this);